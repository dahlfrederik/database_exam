CREATE TABLE IF NOT EXISTS  users (
	user_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	username VARCHAR(50) UNIQUE NOT NULL, 
	password VARCHAR (255) NOT NULL, 
	email VARCHAR (255) UNIQUE NOT NULL, 
	created_at TIMESTAMP NOT NULL DEFAULT NOW() 
);

CREATE TABLE IF NOT EXISTS roles(
	role_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
	role_name VARCHAR (255) UNIQUE NOT NULL
);


CREATE TABLE IF NOT EXISTS account_roles(
	user_id INT NOT NULL, 
	role_id INT NOT NULL, 
	grant_date TIMESTAMP NOT NULL DEFAULT NOW(), 
	PRIMARY KEY (user_id, role_id),
  	FOREIGN KEY (role_id)
      REFERENCES roles (role_id),
  	FOREIGN KEY (user_id)
      REFERENCES users (user_id)
);


INSERT INTO users(username, password, email) VALUES ('kent123', 'secret', 'clark.kent@dailyplanet.com');
INSERT INTO users(username, password, email) VALUES ('bats', 'secret', 'i.am.batman@bat.com');
INSERT INTO users(username, password, email) VALUES ('wwoman', 'secret', 'diana.prince@apocalypse.com');
INSERT INTO users(username, password, email) VALUES ('fastestman', 'secret', 'barry_allen@fastestalive.com');

INSERT INTO roles(role_name) VALUES ('user'); 
INSERT INTO roles(role_name) VALUES ('admin'); 

INSERT INTO account_roles(user_id, role_id) VALUES (1, 1);
INSERT INTO account_roles(user_id, role_id) VALUES (2, 2);
INSERT INTO account_roles(user_id, role_id) VALUES (3, 1);



CREATE OR REPLACE FUNCTION  make_user_admin(User_id int)  
returns int  
language plpgsql  
as  
$$  
Begin  
	INSERT INTO account_roles(user_id, role_id) VALUES (User_id, 2);
	RETURN user_id ;
End;  
$$;  

SELECT * from make_user_admin(13)